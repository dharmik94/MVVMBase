apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion versions.compileSdk

    defaultConfig {
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        targetCompatibility versions.targetCompatibility
        sourceCompatibility versions.sourceCompatibility
    }
    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    // Support Library
    api "com.android.support:appcompat-v7:$versions.supportLibrary"
    api "com.android.support:support-v4:$versions.supportLibrary"
    api "com.android.support:recyclerview-v7:$versions.supportLibrary"
    api "com.android.support:design:$versions.supportLibrary"

    // Architecture Components
    api "android.arch.lifecycle:extensions:$versions.lifecycle"
    annotationProcessor "android.arch.lifecycle:compiler:$versions.lifecycle"
    api "android.arch.lifecycle:common-java8:$versions.lifecycle"

    // Test
    testImplementation "junit:junit:$versions.junit"
    androidTestImplementation "com.android.support.test:runner:$versions.runner"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$versions.espresso_core"

    // RxJava & RxAndroid
    api "io.reactivex.rxjava2:rxjava:$versions.rxjava"
    api "io.reactivex.rxjava2:rxandroid:$versions.rxandroid"

    // dagger2
    api "com.google.dagger:dagger:$versions.dagger2Version"
    api "com.google.dagger:dagger-android:$versions.dagger2Version"
    api "com.google.dagger:dagger-android-support:$versions.dagger2Version"
    kapt "com.google.dagger:dagger-compiler:$versions.dagger2Version"
    kapt "com.google.dagger:dagger-android-processor:$versions.dagger2Version"
}

apply plugin: 'kotlin-kapt'

